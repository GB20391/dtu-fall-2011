%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, October 3, 2011 2:09:17 PM CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
41.0000 -1.00000 345.992 354.061 rc
1.00000 0 0 RG
newpath
42.0000 352.000 m
42.6859 234.404 l
43.3719 131.961 l
44.0579 56.3237 l
44.7439 13.1094 l
45.4299 1.00000 l
46.1159 12.6676 l
46.8018 37.1832 l
47.4878 63.1500 l
48.1738 81.6381 l
48.8598 88.1084 l
49.5458 82.8700 l
50.2318 70.0881 l
50.9178 55.7916 l
51.6037 45.5968 l
52.2897 42.8837 l
52.9757 47.9498 l
53.6617 58.2995 l
54.3477 69.8483 l
55.0337 78.5366 l
55.7196 81.7630 l
56.4056 79.1620 l
57.0916 72.5186 l
57.7776 64.9274 l
58.4636 59.5600 l
59.1496 58.5079 l
59.8355 62.1101 l
60.5215 68.9655 l
61.2075 76.5765 l
61.8935 82.3438 l
62.5795 84.5294 l
63.2655 82.8389 l
63.9515 78.4356 l
64.6374 73.4187 l
65.3234 69.9886 l
66.0094 69.6245 l
66.6954 72.5766 l
67.3814 77.8422 l
68.0674 83.6069 l
68.7533 87.9640 l
69.4393 89.6316 l
70.1253 88.3992 l
70.8113 85.1544 l
71.4973 81.4980 l
72.1833 79.1109 l
72.8693 79.1203 l
73.5552 81.7016 l
74.2412 86.0539 l
74.9272 90.7426 l
75.6132 94.2652 l
76.2992 95.6197 l
76.9852 94.6611 l
77.6711 92.1231 l
78.3571 89.3071 l
79.0431 87.5708 l
79.7291 87.8132 l
80.4151 90.1525 l
81.1011 93.9091 l
81.7870 97.8903 l
82.4730 100.858 l
83.1590 102.001 l
83.8450 101.223 l
84.5310 99.1610 l
85.2170 96.9154 l
85.9030 95.6230 l
86.5889 96.0234 l
87.2749 98.1908 l
87.9609 101.526 l
88.6469 105.004 l
89.3329 107.576 l
90.0189 108.565 l
90.7049 107.914 l
91.3908 106.193 l
92.0768 104.359 l
92.7628 103.389 l
93.4488 103.903 l
94.1348 105.940 l
94.8208 108.961 l
95.5067 112.063 l
96.1927 114.335 l
96.8787 115.205 l
97.5647 114.649 l
98.2507 113.184 l
98.9367 111.662 l
99.6226 110.935 l
100.308 111.533 l
100.994 113.469 l
101.680 116.244 l
102.366 119.052 l
103.052 121.089 l
103.738 121.865 l
104.424 121.381 l
105.110 120.115 l
105.796 118.836 l
106.482 118.300 l
107.168 118.964 l
107.854 120.817 l
108.540 123.395 l
109.226 125.965 l
109.912 127.812 l
110.598 128.511 l
111.284 128.082 l
111.970 126.976 l
112.656 125.893 l
113.342 125.510 l
114.028 126.225 l
114.714 128.009 l
115.400 130.424 l
116.086 132.798 l
116.772 134.488 l
117.458 135.122 l
118.144 134.738 l
118.830 133.762 l
119.516 132.839 l
120.202 132.582 l
120.888 133.339 l
121.574 135.063 l
122.260 137.340 l
122.946 139.550 l
123.632 141.106 l
124.318 141.684 l
125.004 141.337 l
125.690 140.469 l
126.376 139.680 l
127.062 139.528 l
127.748 140.319 l
128.434 141.992 l
129.120 144.152 l
129.806 146.219 l
130.492 147.662 l
131.178 148.191 l
131.864 147.873 l
132.549 147.098 l
133.235 146.422 l
133.921 146.359 l
134.607 147.177 l
135.293 148.806 l
135.979 150.863 l
136.665 152.808 l
137.351 154.150 l
138.037 154.636 l
138.723 154.343 l
139.409 153.646 l
140.095 153.068 l
140.781 153.081 l
141.467 153.923 l
142.153 155.511 l
142.839 157.478 l
143.525 159.315 l
144.211 160.570 l
144.897 161.017 l
145.583 160.745 l
146.269 160.116 l
146.955 159.623 l
147.641 159.702 l
148.327 160.563 l
149.013 162.115 l
149.699 164.002 l
150.385 165.743 l
151.071 166.919 l
151.757 167.332 l
152.443 167.078 l
153.129 166.508 l
153.815 166.089 l
154.501 166.226 l
155.187 167.104 l
155.873 168.623 l
156.559 170.438 l
157.245 172.093 l
157.931 173.198 l
158.617 173.579 l
159.303 173.341 l
159.989 172.823 l
160.675 172.470 l
161.361 172.658 l
162.047 173.550 l
162.733 175.040 l
163.419 176.789 l
164.105 178.366 l
164.791 179.408 l
165.477 179.760 l
166.163 179.534 l
166.849 179.063 l
167.535 178.769 l
168.221 179.002 l
168.907 179.907 l
169.593 181.369 l
170.279 183.059 l
170.965 184.565 l
171.651 185.548 l
172.337 185.874 l
173.023 185.659 l
173.709 185.230 l
174.395 184.988 l
175.081 185.263 l
175.767 186.179 l
176.452 187.615 l
177.138 189.251 l
177.824 190.692 l
178.510 191.621 l
179.196 191.922 l
179.882 191.717 l
180.568 191.325 l
181.254 191.132 l
181.940 191.443 l
182.626 192.368 l
183.312 193.781 l
183.998 195.367 l
184.684 196.748 l
185.370 197.628 l
186.056 197.905 l
186.742 197.709 l
187.428 197.352 l
188.114 197.202 l
188.800 197.546 l
189.486 198.480 l
190.172 199.870 l
190.858 201.410 l
191.544 202.735 l
192.230 203.569 l
192.916 203.825 l
193.602 203.637 l
194.288 203.310 l
194.974 203.200 l
195.660 203.576 l
196.346 204.517 l
197.032 205.887 l
197.718 207.382 l
198.404 208.656 l
199.090 209.448 l
199.776 209.683 l
200.462 209.502 l
201.148 209.204 l
201.834 209.131 l
202.520 209.535 l
203.206 210.483 l
203.892 211.833 l
204.578 213.288 l
205.264 214.514 l
205.950 215.265 l
206.636 215.481 l
207.322 215.306 l
208.008 215.035 l
208.694 214.996 l
209.380 215.426 l
210.066 216.380 l
210.752 217.711 l
211.438 219.128 l
212.124 220.309 l
212.810 221.023 l
213.496 221.220 l
214.182 221.052 l
214.868 220.805 l
215.554 220.798 l
216.240 221.252 l
216.926 222.212 l
217.612 223.525 l
218.298 224.907 l
218.984 226.045 l
219.670 226.723 l
220.355 226.904 l
221.041 226.740 l
221.727 226.517 l
222.413 226.539 l
223.099 227.016 l
223.785 227.981 l
224.471 229.278 l
225.157 230.626 l
225.843 231.723 l
226.529 232.368 l
227.215 232.532 l
227.901 232.374 l
228.587 232.172 l
229.273 232.222 l
229.959 232.720 l
230.645 233.690 l
231.331 234.972 l
232.017 236.287 l
232.703 237.347 l
233.389 237.960 l
234.075 238.109 l
234.761 237.954 l
235.447 237.773 l
236.133 237.850 l
236.819 238.368 l
237.505 239.342 l
238.191 240.609 l
238.877 241.894 l
239.563 242.917 l
240.249 243.500 l
240.935 243.635 l
241.621 243.485 l
242.307 243.323 l
242.993 243.424 l
243.679 243.962 l
244.365 244.940 l
245.051 246.193 l
245.737 247.449 l
246.423 248.438 l
247.109 248.992 l
247.795 249.112 l
248.481 248.966 l
249.167 248.823 l
249.853 248.948 l
250.539 249.505 l
251.225 250.487 l
251.911 251.726 l
252.597 252.954 l
253.283 253.910 l
253.969 254.437 l
254.655 254.544 l
255.341 254.402 l
256.027 254.276 l
256.713 254.425 l
257.399 254.998 l
258.085 255.984 l
258.771 257.210 l
259.457 258.412 l
260.143 259.337 l
260.829 259.837 l
261.515 259.932 l
262.201 259.794 l
262.887 259.685 l
263.573 259.855 l
264.258 260.446 l
264.944 261.435 l
265.630 262.649 l
266.316 263.826 l
267.002 264.720 l
267.688 265.196 l
268.374 265.278 l
269.060 265.143 l
269.746 265.051 l
270.432 265.243 l
271.118 265.850 l
271.804 266.843 l
272.490 268.045 l
273.176 269.197 l
273.862 270.062 l
274.548 270.514 l
275.234 270.585 l
275.920 270.454 l
276.606 270.377 l
277.292 270.589 l
277.978 271.212 l
278.664 272.209 l
279.350 273.399 l
280.036 274.529 l
280.722 275.366 l
281.408 275.795 l
282.094 275.854 l
282.780 275.727 l
283.466 275.666 l
284.152 275.898 l
284.838 276.536 l
285.524 277.537 l
286.210 278.716 l
286.896 279.823 l
287.582 280.634 l
288.268 281.040 l
288.954 281.089 l
289.640 280.965 l
290.326 280.919 l
291.012 281.171 l
291.698 281.824 l
292.384 282.828 l
293.070 283.997 l
293.756 285.082 l
294.442 285.867 l
295.128 286.252 l
295.814 286.291 l
296.500 286.171 l
297.186 286.140 l
297.872 286.410 l
298.558 287.078 l
299.244 288.086 l
299.930 289.245 l
300.616 290.310 l
301.302 291.070 l
301.988 291.433 l
302.674 291.462 l
303.360 291.346 l
304.046 291.329 l
304.732 291.619 l
305.418 292.301 l
306.104 293.313 l
306.790 294.463 l
307.476 295.507 l
308.162 296.243 l
308.847 296.586 l
309.533 296.606 l
310.219 296.493 l
310.905 296.491 l
311.591 296.799 l
312.277 297.496 l
312.963 298.512 l
313.649 299.652 l
314.335 300.677 l
315.021 301.389 l
315.707 301.713 l
316.393 301.724 l
317.079 301.615 l
317.765 301.627 l
318.451 301.953 l
319.137 302.665 l
319.823 303.684 l
320.509 304.816 l
321.195 305.821 l
321.881 306.511 l
322.567 306.816 l
323.253 306.818 l
323.939 306.714 l
324.625 306.740 l
325.311 307.084 l
325.997 307.809 l
326.683 308.833 l
327.369 309.956 l
328.055 310.943 l
328.741 311.611 l
329.427 311.898 l
330.113 311.891 l
330.799 311.791 l
331.485 311.832 l
332.171 312.193 l
332.857 312.933 l
333.543 313.961 l
334.229 315.076 l
334.915 316.045 l
335.601 316.691 l
336.287 316.960 l
336.973 316.946 l
337.659 316.850 l
338.345 316.905 l
339.031 317.284 l
339.717 318.038 l
340.403 319.070 l
341.089 320.178 l
341.775 321.130 l
342.461 321.754 l
343.147 322.006 l
343.833 321.984 l
344.519 321.892 l
345.205 321.961 l
345.891 322.359 l
346.577 323.127 l
347.263 324.163 l
347.949 325.264 l
348.635 326.198 l
349.321 326.802 l
350.007 327.037 l
350.693 327.008 l
351.379 326.921 l
352.064 327.004 l
352.750 327.420 l
353.436 328.202 l
354.122 329.243 l
354.808 330.336 l
355.494 331.254 l
356.180 331.838 l
356.866 332.057 l
357.552 332.021 l
358.238 331.938 l
358.924 332.036 l
359.610 332.469 l
360.296 333.265 l
360.982 334.312 l
361.668 335.398 l
362.354 336.300 l
363.040 336.864 l
363.726 337.066 l
364.412 337.024 l
365.098 336.946 l
365.784 337.058 l
366.470 337.509 l
367.156 338.320 l
367.842 339.372 l
368.528 340.452 l
369.214 341.338 l
369.900 341.882 l
370.586 342.069 l
371.272 342.020 l
371.958 341.947 l
372.644 342.074 l
373.330 342.543 l
374.016 343.369 l
374.702 344.425 l
375.388 345.499 l
376.074 346.370 l
376.760 346.895 l
377.446 347.066 l
378.132 347.011 l
378.818 346.944 l
379.504 347.085 l
380.190 347.573 l
380.876 348.413 l
381.562 349.475 l
382.248 350.543 l
382.934 351.398 l
383.620 351.905 l
384.306 352.061 l
384.992 352.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
q
newpath
42.0000 352.000 m
384.992 352.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
209 375 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
42.0000 352.000 m
42.0000 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
46.9062 377.234 m
45.9375 377.234 45.1562 376.783 44.5625 375.882  c
43.9687 374.981 43.6718 373.796 43.6718 372.328  c
43.6718 370.817 43.9687 369.614 44.5625 368.718  c
45.1562 367.822 45.9531 367.375 46.9531 367.375  c
47.9531 367.375 48.7526 367.822 49.3515 368.718  c
49.9505 369.614 50.2500 370.812 50.2500 372.312  c
50.2500 373.822 49.9505 375.020 49.3515 375.906  c
48.7526 376.791 47.9375 377.234 46.9062 377.234  c
h
46.9218 376.843 m
48.2552 376.906 48.9218 375.369 48.9218 372.234  c
48.9218 369.244 48.2656 367.750 46.9531 367.750  c
45.6510 367.750 45.0000 369.265 45.0000 372.296  c
45.0000 375.265 45.6406 376.781 46.9218 376.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
110.598 352.000 m
110.598 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
109.906 377.234 m
108.937 377.234 108.156 376.783 107.562 375.882  c
106.968 374.981 106.671 373.796 106.671 372.328  c
106.671 370.817 106.968 369.614 107.562 368.718  c
108.156 367.822 108.953 367.375 109.953 367.375  c
110.953 367.375 111.752 367.822 112.351 368.718  c
112.950 369.614 113.250 370.812 113.250 372.312  c
113.250 373.822 112.950 375.020 112.351 375.906  c
111.752 376.791 110.937 377.234 109.906 377.234  c
h
109.921 376.843 m
111.255 376.906 111.921 375.369 111.921 372.234  c
111.921 369.244 111.265 367.750 109.953 367.750  c
108.651 367.750 108.000 369.265 108.000 372.296  c
108.000 375.265 108.640 376.781 109.921 376.843  c
h
114.937 377.000 m
114.937 375.437 l
116.500 375.437 l
116.500 377.000 l
114.937 377.000 l
h
118.015 377.000 m
118.015 376.375 l
118.380 375.322 118.942 374.437 119.703 373.718  c
120.390 373.093 l
121.161 372.364 121.677 371.786 121.937 371.359  c
122.197 370.932 122.328 370.442 122.328 369.890  c
122.328 369.244 122.169 368.729 121.851 368.343  c
121.533 367.958 121.114 367.765 120.593 367.765  c
120.020 367.765 119.536 367.921 119.140 368.234  c
118.994 368.349 118.901 368.770 118.859 369.500  c
118.859 369.656 l
118.218 369.656 l
118.218 367.937 l
119.135 367.552 119.979 367.359 120.750 367.359  c
121.593 367.359 122.289 367.599 122.835 368.078  c
123.382 368.557 123.656 369.161 123.656 369.890  c
123.656 370.880 123.041 371.796 121.812 372.640  c
121.046 373.171 l
119.828 374.005 119.161 374.916 119.046 375.906  c
123.609 375.906 l
123.609 377.000 l
118.015 377.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
179.196 352.000 m
179.196 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
178.906 377.234 m
177.937 377.234 177.156 376.783 176.562 375.882  c
175.968 374.981 175.671 373.796 175.671 372.328  c
175.671 370.817 175.968 369.614 176.562 368.718  c
177.156 367.822 177.953 367.375 178.953 367.375  c
179.953 367.375 180.752 367.822 181.351 368.718  c
181.950 369.614 182.250 370.812 182.250 372.312  c
182.250 373.822 181.950 375.020 181.351 375.906  c
180.752 376.791 179.937 377.234 178.906 377.234  c
h
178.921 376.843 m
180.255 376.906 180.921 375.369 180.921 372.234  c
180.921 369.244 180.265 367.750 178.953 367.750  c
177.651 367.750 177.000 369.265 177.000 372.296  c
177.000 375.265 177.640 376.781 178.921 376.843  c
h
183.937 377.000 m
183.937 375.437 l
185.500 375.437 l
185.500 377.000 l
183.937 377.000 l
h
190.703 374.343 m
186.390 374.343 l
186.390 373.718 l
191.093 367.453 l
191.796 367.453 l
191.796 373.390 l
193.046 373.390 l
193.046 374.343 l
191.796 374.343 l
191.796 375.359 l
191.796 375.859 191.835 376.182 191.914 376.328  c
191.992 376.474 192.161 376.552 192.421 376.562  c
192.859 376.593 l
192.968 376.609 l
192.968 377.000 l
189.375 377.000 l
189.375 376.609 l
189.484 376.593 l
190.140 376.562 l
190.369 376.552 190.520 376.468 190.593 376.312  c
190.666 376.156 190.703 375.838 190.703 375.359  c
190.703 374.343 l
h
187.093 373.390 m
190.703 373.390 l
190.703 368.609 l
187.093 373.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
247.795 352.000 m
247.795 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
246.906 377.234 m
245.937 377.234 245.156 376.783 244.562 375.882  c
243.968 374.981 243.671 373.796 243.671 372.328  c
243.671 370.817 243.968 369.614 244.562 368.718  c
245.156 367.822 245.953 367.375 246.953 367.375  c
247.953 367.375 248.752 367.822 249.351 368.718  c
249.950 369.614 250.250 370.812 250.250 372.312  c
250.250 373.822 249.950 375.020 249.351 375.906  c
248.752 376.791 247.937 377.234 246.906 377.234  c
h
246.921 376.843 m
248.255 376.906 248.921 375.369 248.921 372.234  c
248.921 369.244 248.265 367.750 246.953 367.750  c
245.651 367.750 245.000 369.265 245.000 372.296  c
245.000 375.265 245.640 376.781 246.921 376.843  c
h
251.937 377.000 m
251.937 375.437 l
253.500 375.437 l
253.500 377.000 l
251.937 377.000 l
h
256.109 372.187 m
256.703 371.375 257.458 370.968 258.375 370.968  c
259.197 370.968 259.869 371.242 260.390 371.789  c
260.911 372.335 261.171 373.046 261.171 373.921  c
261.171 374.859 260.875 375.645 260.281 376.281  c
259.687 376.916 258.958 377.234 258.093 377.234  c
257.031 377.234 256.213 376.820 255.640 375.992  c
255.067 375.164 254.781 373.984 254.781 372.453  c
254.781 370.838 255.112 369.585 255.773 368.695  c
256.434 367.804 257.369 367.359 258.578 367.359  c
259.359 367.359 260.046 367.500 260.640 367.781  c
260.640 369.281 l
260.015 369.281 l
260.000 369.156 l
259.968 368.703 l
259.947 368.421 259.796 368.192 259.515 368.015  c
259.234 367.838 258.880 367.750 258.453 367.750  c
257.713 367.750 257.138 368.138 256.726 368.914  c
256.315 369.690 256.109 370.781 256.109 372.187  c
h
256.156 373.531 m
256.156 374.500 256.351 375.291 256.742 375.906  c
257.132 376.520 257.635 376.828 258.250 376.828  c
259.354 376.828 259.906 375.916 259.906 374.093  c
259.906 372.302 259.333 371.406 258.187 371.406  c
257.562 371.406 257.067 371.599 256.703 371.984  c
256.338 372.369 256.156 372.885 256.156 373.531  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
316.393 352.000 m
316.393 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
315.906 377.234 m
314.937 377.234 314.156 376.783 313.562 375.882  c
312.968 374.981 312.671 373.796 312.671 372.328  c
312.671 370.817 312.968 369.614 313.562 368.718  c
314.156 367.822 314.953 367.375 315.953 367.375  c
316.953 367.375 317.752 367.822 318.351 368.718  c
318.950 369.614 319.250 370.812 319.250 372.312  c
319.250 373.822 318.950 375.020 318.351 375.906  c
317.752 376.791 316.937 377.234 315.906 377.234  c
h
315.921 376.843 m
317.255 376.906 317.921 375.369 317.921 372.234  c
317.921 369.244 317.265 367.750 315.953 367.750  c
314.651 367.750 314.000 369.265 314.000 372.296  c
314.000 375.265 314.640 376.781 315.921 376.843  c
h
320.937 377.000 m
320.937 375.437 l
322.500 375.437 l
322.500 377.000 l
320.937 377.000 l
h
325.718 371.937 m
324.750 371.270 324.265 370.541 324.265 369.750  c
324.265 369.041 324.523 368.466 325.039 368.023  c
325.554 367.580 326.229 367.359 327.062 367.359  c
327.854 367.359 328.487 367.546 328.960 367.921  c
329.434 368.296 329.671 368.796 329.671 369.421  c
329.671 370.390 329.052 371.187 327.812 371.812  c
329.312 372.447 330.062 373.364 330.062 374.562  c
330.062 375.354 329.765 375.997 329.171 376.492  c
328.578 376.987 327.812 377.234 326.875 377.234  c
325.958 377.234 325.216 377.002 324.648 376.539  c
324.080 376.075 323.796 375.468 323.796 374.718  c
323.796 373.458 324.437 372.531 325.718 371.937  c
h
327.468 371.609 m
328.208 371.067 328.578 370.349 328.578 369.453  c
328.578 368.942 328.427 368.531 328.125 368.218  c
327.822 367.906 327.427 367.750 326.937 367.750  c
326.500 367.750 326.127 367.903 325.820 368.210  c
325.513 368.518 325.359 368.895 325.359 369.343  c
325.359 369.781 325.500 370.148 325.781 370.445  c
326.062 370.742 326.625 371.130 327.468 371.609  c
h
326.000 372.218 m
325.364 372.802 325.046 373.583 325.046 374.562  c
325.046 375.260 325.218 375.815 325.562 376.226  c
325.906 376.638 326.364 376.843 326.937 376.843  c
327.479 376.843 327.927 376.661 328.281 376.296  c
328.635 375.932 328.812 375.474 328.812 374.921  c
328.812 374.463 328.677 374.080 328.406 373.773  c
328.135 373.466 327.630 373.109 326.890 372.703  c
326.000 372.218 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
384.992 352.000 m
384.992 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
389.578 367.515 m
389.578 375.359 l
389.625 375.984 l
389.635 376.234 389.705 376.398 389.835 376.476  c
389.966 376.554 390.234 376.593 390.640 376.593  c
391.390 376.609 l
391.390 377.000 l
386.531 377.000 l
386.531 376.609 l
387.265 376.593 l
387.671 376.593 387.940 376.554 388.070 376.476  c
388.200 376.398 388.276 376.234 388.296 375.984  c
388.328 375.359 l
388.328 369.531 l
388.296 368.890 l
388.296 368.588 388.208 368.437 388.031 368.437  c
387.906 368.437 387.614 368.479 387.156 368.562  c
386.531 368.671 l
386.531 368.281 l
389.578 367.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
76.2992 352.000 m
76.2992 354.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
144.897 352.000 m
144.897 354.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
213.496 352.000 m
213.496 354.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
282.094 352.000 m
282.094 354.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
350.693 352.000 m
350.693 354.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
42.0000 352.061 m
42.0000 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 169 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
42.0000 352.000 m
36.8000 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
33.9062 363.234 m
32.9375 363.234 32.1562 362.783 31.5625 361.882  c
30.9687 360.981 30.6718 359.796 30.6718 358.328  c
30.6718 356.817 30.9687 355.614 31.5625 354.718  c
32.1562 353.822 32.9531 353.375 33.9531 353.375  c
34.9531 353.375 35.7526 353.822 36.3515 354.718  c
36.9505 355.614 37.2500 356.812 37.2500 358.312  c
37.2500 359.822 36.9505 361.020 36.3515 361.906  c
35.7526 362.791 34.9375 363.234 33.9062 363.234  c
h
33.9218 362.843 m
35.2552 362.906 35.9218 361.369 35.9218 358.234  c
35.9218 355.244 35.2656 353.750 33.9531 353.750  c
32.6510 353.750 32.0000 355.265 32.0000 358.296  c
32.0000 361.265 32.6406 362.781 33.9218 362.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 276.722 m
36.8000 276.722 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
22.9062 287.234 m
21.9375 287.234 21.1562 286.783 20.5625 285.882  c
19.9687 284.981 19.6718 283.796 19.6718 282.328  c
19.6718 280.817 19.9687 279.614 20.5625 278.718  c
21.1562 277.822 21.9531 277.375 22.9531 277.375  c
23.9531 277.375 24.7526 277.822 25.3515 278.718  c
25.9505 279.614 26.2500 280.812 26.2500 282.312  c
26.2500 283.822 25.9505 285.020 25.3515 285.906  c
24.7526 286.791 23.9375 287.234 22.9062 287.234  c
h
22.9218 286.843 m
24.2552 286.906 24.9218 285.369 24.9218 282.234  c
24.9218 279.244 24.2656 277.750 22.9531 277.750  c
21.6510 277.750 21.0000 279.265 21.0000 282.296  c
21.0000 285.265 21.6406 286.781 22.9218 286.843  c
h
27.9375 287.000 m
27.9375 285.437 l
29.5000 285.437 l
29.5000 287.000 l
27.9375 287.000 l
h
31.4843 287.015 m
31.4843 285.437 l
32.1093 285.437 l
32.1250 285.578 l
32.1406 286.062 l
32.1614 286.583 32.5677 286.843 33.3593 286.843  c
33.9427 286.843 34.4062 286.614 34.7500 286.156  c
35.0937 285.697 35.2656 285.078 35.2656 284.296  c
35.2656 283.401 35.0000 282.760 34.4687 282.375  c
33.9375 281.989 33.0677 281.796 31.8593 281.796  c
31.6406 281.796 l
31.6406 277.609 l
36.3750 277.609 l
36.3750 278.703 l
32.0312 278.703 l
32.0312 281.328 l
32.6093 281.328 l
35.2552 281.328 36.5781 282.333 36.5781 284.343  c
36.5781 285.250 36.2734 285.958 35.6640 286.468  c
35.0546 286.979 34.2135 287.234 33.1406 287.234  c
32.6093 287.234 32.0572 287.161 31.4843 287.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 201.444 m
36.8000 201.444 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
34.5781 202.515 m
34.5781 210.359 l
34.6250 210.984 l
34.6354 211.234 34.7057 211.398 34.8359 211.476  c
34.9661 211.554 35.2343 211.593 35.6406 211.593  c
36.3906 211.609 l
36.3906 212.000 l
31.5312 212.000 l
31.5312 211.609 l
32.2656 211.593 l
32.6718 211.593 32.9401 211.554 33.0703 211.476  c
33.2005 211.398 33.2760 211.234 33.2968 210.984  c
33.3281 210.359 l
33.3281 204.531 l
33.2968 203.890 l
33.2968 203.588 33.2083 203.437 33.0312 203.437  c
32.9062 203.437 32.6145 203.479 32.1562 203.562  c
31.5312 203.671 l
31.5312 203.281 l
34.5781 202.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 126.165 m
36.8000 126.165 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
23.5781 127.515 m
23.5781 135.359 l
23.6250 135.984 l
23.6354 136.234 23.7057 136.398 23.8359 136.476  c
23.9661 136.554 24.2343 136.593 24.6406 136.593  c
25.3906 136.609 l
25.3906 137.000 l
20.5312 137.000 l
20.5312 136.609 l
21.2656 136.593 l
21.6718 136.593 21.9401 136.554 22.0703 136.476  c
22.2005 136.398 22.2760 136.234 22.2968 135.984  c
22.3281 135.359 l
22.3281 129.531 l
22.2968 128.890 l
22.2968 128.588 22.2083 128.437 22.0312 128.437  c
21.9062 128.437 21.6145 128.479 21.1562 128.562  c
20.5312 128.671 l
20.5312 128.281 l
23.5781 127.515 l
h
27.9375 137.000 m
27.9375 135.437 l
29.5000 135.437 l
29.5000 137.000 l
27.9375 137.000 l
h
31.4843 137.015 m
31.4843 135.437 l
32.1093 135.437 l
32.1250 135.578 l
32.1406 136.062 l
32.1614 136.583 32.5677 136.843 33.3593 136.843  c
33.9427 136.843 34.4062 136.614 34.7500 136.156  c
35.0937 135.697 35.2656 135.078 35.2656 134.296  c
35.2656 133.401 35.0000 132.760 34.4687 132.375  c
33.9375 131.989 33.0677 131.796 31.8593 131.796  c
31.6406 131.796 l
31.6406 127.609 l
36.3750 127.609 l
36.3750 128.703 l
32.0312 128.703 l
32.0312 131.328 l
32.6093 131.328 l
35.2552 131.328 36.5781 132.333 36.5781 134.343  c
36.5781 135.250 36.2734 135.958 35.6640 136.468  c
35.0546 136.979 34.2135 137.234 33.1406 137.234  c
32.6093 137.234 32.0572 137.161 31.4843 137.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 50.8878 m
36.8000 50.8878 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
31.0156 61.0000 m
31.0156 60.3750 l
31.3802 59.3229 31.9427 58.4375 32.7031 57.7187  c
33.3906 57.0937 l
34.1614 56.3645 34.6770 55.7864 34.9375 55.3593  c
35.1979 54.9322 35.3281 54.4427 35.3281 53.8906  c
35.3281 53.2447 35.1692 52.7291 34.8515 52.3437  c
34.5338 51.9583 34.1145 51.7656 33.5937 51.7656  c
33.0208 51.7656 32.5364 51.9218 32.1406 52.2343  c
31.9947 52.3489 31.9010 52.7708 31.8593 53.5000  c
31.8593 53.6562 l
31.2187 53.6562 l
31.2187 51.9375 l
32.1354 51.5520 32.9791 51.3593 33.7500 51.3593  c
34.5937 51.3593 35.2890 51.5989 35.8359 52.0781  c
36.3828 52.5572 36.6562 53.1614 36.6562 53.8906  c
36.6562 54.8802 36.0416 55.7968 34.8125 56.6406  c
34.0468 57.1718 l
32.8281 58.0052 32.1614 58.9166 32.0468 59.9062  c
36.6093 59.9062 l
36.6093 61.0000 l
31.0156 61.0000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 336.944 m
39.4000 336.944 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 321.889 m
39.4000 321.889 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 306.833 m
39.4000 306.833 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 291.777 m
39.4000 291.777 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 261.666 m
39.4000 261.666 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 246.610 m
39.4000 246.610 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 231.555 m
39.4000 231.555 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 216.499 m
39.4000 216.499 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 186.388 m
39.4000 186.388 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 171.332 m
39.4000 171.332 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 156.277 m
39.4000 156.277 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 141.221 m
39.4000 141.221 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 111.110 m
39.4000 111.110 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 96.0547 m
39.4000 96.0547 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 80.9990 m
39.4000 80.9990 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 65.9434 m
39.4000 65.9434 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 35.8322 m
39.4000 35.8322 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 20.7766 m
39.4000 20.7766 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
42.0000 5.72097 m
39.4000 5.72097 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
