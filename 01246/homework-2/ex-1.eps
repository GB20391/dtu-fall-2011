%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Sunday, October 2, 2011 7:58:54 PM CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
53 365 294 25 rc
q
q
56 368 73 19 rc
q
[ 1.00000 0 0 1.00000 58.0000 369.000 ] concat
1.00000 0 0 RG
newpath
0 7.00000 m
34.0000 7.00000 l
S
[ 1.00000 0 0 1.00000 -58.0000 -369.000 ] concat
Q
[ 1.00000 0 0 1.00000 56.0000 368.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
37 0 35 18 rc
newpath
46.2812 14.9531 m
45.9166 15.1093 45.5677 15.1875 45.2343 15.1875  c
44.3906 15.1875 43.7734 14.9739 43.3828 14.5468  c
42.9921 14.1197 42.7968 13.4427 42.7968 12.5156  c
42.7968 7.64062 l
41.6250 7.64062 l
41.6250 7.04687 l
42.7968 7.04687 l
42.7968 5.60937 l
44.2500 5.25000 l
44.2500 7.04687 l
46.4687 7.04687 l
46.4687 7.64062 l
44.2500 7.64062 l
44.2500 12.7031 l
44.2500 13.4427 44.3333 13.9427 44.5000 14.2031  c
44.6666 14.4635 44.9843 14.5937 45.4531 14.5937  c
45.6822 14.5937 45.9583 14.5208 46.2812 14.3750  c
46.2812 14.9531 l
h
48.6250 12.3750 m
48.6250 11.6562 l
57.2968 11.6562 l
57.2968 12.3750 l
48.6250 12.3750 l
h
48.6250 9.67187 m
48.6250 8.93750 l
57.2968 8.93750 l
57.2968 9.67187 l
48.6250 9.67187 l
h
64.2812 4.06250 m
64.2812 13.1093 l
64.3281 13.8281 l
64.3489 14.1197 64.4349 14.3099 64.5859 14.3984  c
64.7369 14.4869 65.0468 14.5312 65.5156 14.5312  c
66.3750 14.5468 l
66.3750 15.0000 l
60.7656 15.0000 l
60.7656 14.5468 l
61.6250 14.5312 l
62.0833 14.5312 62.3880 14.4869 62.5390 14.3984  c
62.6901 14.3099 62.7760 14.1197 62.7968 13.8281  c
62.8437 13.1093 l
62.8437 6.37500 l
62.7968 5.64062 l
62.7968 5.29687 62.6979 5.12500 62.5000 5.12500  c
62.3541 5.12500 62.0156 5.17187 61.4843 5.26562  c
60.7656 5.39062 l
60.7656 4.93750 l
64.2812 4.06250 l
h
f
Q
cliprestore
newpath
0 0 m
0 19.0000 l
73.0000 19.0000 l
73.0000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 56.0000 368.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -56.0000 -368.000 ] concat
cliprestore
newpath
53.0000 365.000 m
53.0000 390.000 l
347.000 390.000 l
347.000 365.000 l
h
W
Q
q
128 368 73 19 rc
q
[ 1.00000 0 0 1.00000 130.000 369.000 ] concat
0.196078 0.803922 0.196078 RG
newpath
0 7.00000 m
34.0000 7.00000 l
S
[ 1.00000 0 0 1.00000 -130.000 -369.000 ] concat
Q
[ 1.00000 0 0 1.00000 128.000 368.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
37 0 35 18 rc
newpath
46.2812 14.9531 m
45.9166 15.1093 45.5677 15.1875 45.2343 15.1875  c
44.3906 15.1875 43.7734 14.9739 43.3828 14.5468  c
42.9921 14.1197 42.7968 13.4427 42.7968 12.5156  c
42.7968 7.64062 l
41.6250 7.64062 l
41.6250 7.04687 l
42.7968 7.04687 l
42.7968 5.60937 l
44.2500 5.25000 l
44.2500 7.04687 l
46.4687 7.04687 l
46.4687 7.64062 l
44.2500 7.64062 l
44.2500 12.7031 l
44.2500 13.4427 44.3333 13.9427 44.5000 14.2031  c
44.6666 14.4635 44.9843 14.5937 45.4531 14.5937  c
45.6822 14.5937 45.9583 14.5208 46.2812 14.3750  c
46.2812 14.9531 l
h
48.6250 12.3750 m
48.6250 11.6562 l
57.2968 11.6562 l
57.2968 12.3750 l
48.6250 12.3750 l
h
48.6250 9.67187 m
48.6250 8.93750 l
57.2968 8.93750 l
57.2968 9.67187 l
48.6250 9.67187 l
h
60.1718 15.0000 m
60.1718 14.2812 l
60.5885 13.0625 61.2395 12.0416 62.1250 11.2187  c
62.9062 10.5000 l
63.8020 9.65625 64.3984 8.98697 64.6953 8.49218  c
64.9921 7.99739 65.1406 7.43229 65.1406 6.79687  c
65.1406 6.05729 64.9583 5.46354 64.5937 5.01562  c
64.2291 4.56770 63.7500 4.34375 63.1562 4.34375  c
62.4895 4.34375 61.9270 4.52604 61.4687 4.89062  c
61.3020 5.02604 61.1927 5.51041 61.1406 6.34375  c
61.1406 6.51562 l
60.4062 6.51562 l
60.4062 4.54687 l
61.4583 4.09895 62.4322 3.87500 63.3281 3.87500  c
64.3072 3.87500 65.1093 4.15104 65.7343 4.70312  c
66.3593 5.25520 66.6718 5.95312 66.6718 6.79687  c
66.6718 7.94270 65.9635 9.00000 64.5468 9.96875  c
63.6718 10.5781 l
62.2656 11.5468 61.4947 12.5989 61.3593 13.7343  c
66.6250 13.7343 l
66.6250 15.0000 l
60.1718 15.0000 l
h
f
Q
cliprestore
newpath
0 0 m
0 19.0000 l
73.0000 19.0000 l
73.0000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 128.000 368.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -128.000 -368.000 ] concat
cliprestore
newpath
53.0000 365.000 m
53.0000 390.000 l
347.000 390.000 l
347.000 365.000 l
h
W
Q
q
200 368 73 19 rc
q
[ 1.00000 0 0 1.00000 202.000 369.000 ] concat
0.854902 0.647059 0.125490 RG
newpath
0 7.00000 m
34.0000 7.00000 l
S
[ 1.00000 0 0 1.00000 -202.000 -369.000 ] concat
Q
[ 1.00000 0 0 1.00000 200.000 368.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
37 0 35 18 rc
newpath
46.2812 14.9531 m
45.9166 15.1093 45.5677 15.1875 45.2343 15.1875  c
44.3906 15.1875 43.7734 14.9739 43.3828 14.5468  c
42.9921 14.1197 42.7968 13.4427 42.7968 12.5156  c
42.7968 7.64062 l
41.6250 7.64062 l
41.6250 7.04687 l
42.7968 7.04687 l
42.7968 5.60937 l
44.2500 5.25000 l
44.2500 7.04687 l
46.4687 7.04687 l
46.4687 7.64062 l
44.2500 7.64062 l
44.2500 12.7031 l
44.2500 13.4427 44.3333 13.9427 44.5000 14.2031  c
44.6666 14.4635 44.9843 14.5937 45.4531 14.5937  c
45.6822 14.5937 45.9583 14.5208 46.2812 14.3750  c
46.2812 14.9531 l
h
48.6250 12.3750 m
48.6250 11.6562 l
57.2968 11.6562 l
57.2968 12.3750 l
48.6250 12.3750 l
h
48.6250 9.67187 m
48.6250 8.93750 l
57.2968 8.93750 l
57.2968 9.67187 l
48.6250 9.67187 l
h
60.3593 14.9218 m
60.3593 13.0156 l
61.0781 13.0156 l
61.0937 13.1718 l
61.1093 13.6875 l
61.1093 14.0000 61.2942 14.2682 61.6640 14.4921  c
62.0338 14.7161 62.4843 14.8281 63.0156 14.8281  c
63.6510 14.8281 64.1640 14.5755 64.5546 14.0703  c
64.9453 13.5651 65.1406 12.8958 65.1406 12.0625  c
65.1406 11.2395 64.8854 10.5963 64.3750 10.1328  c
63.8645 9.66927 63.1562 9.43750 62.2500 9.43750  c
61.3437 9.43750 l
61.3437 9.00000 l
61.8281 9.00000 l
63.8802 9.00000 64.9062 8.17708 64.9062 6.53125  c
64.9062 5.06250 64.2604 4.32812 62.9687 4.32812  c
62.4062 4.32812 61.9114 4.44791 61.4843 4.68750  c
61.3281 4.78125 61.2239 5.17187 61.1718 5.85937  c
61.1562 5.96875 l
60.4375 5.96875 l
60.4375 4.31250 l
61.2187 4.02083 62.1041 3.87500 63.0937 3.87500  c
64.0937 3.87500 64.8854 4.09895 65.4687 4.54687  c
66.0520 4.99479 66.3437 5.60416 66.3437 6.37500  c
66.3437 7.66666 65.5833 8.58854 64.0625 9.14062  c
64.9895 9.38020 65.6536 9.72135 66.0546 10.1640  c
66.4557 10.6067 66.6562 11.2239 66.6562 12.0156  c
66.6562 13.0156 66.3333 13.8072 65.6875 14.3906  c
65.0416 14.9739 64.1614 15.2656 63.0468 15.2656  c
62.0156 15.2656 61.1197 15.1510 60.3593 14.9218  c
h
f
Q
cliprestore
newpath
0 0 m
0 19.0000 l
73.0000 19.0000 l
73.0000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 200.000 368.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -200.000 -368.000 ] concat
cliprestore
newpath
53.0000 365.000 m
53.0000 390.000 l
347.000 390.000 l
347.000 365.000 l
h
W
Q
q
272 368 73 19 rc
q
[ 1.00000 0 0 1.00000 274.000 369.000 ] concat
0 0 1.00000 RG
newpath
0 7.00000 m
34.0000 7.00000 l
S
[ 1.00000 0 0 1.00000 -274.000 -369.000 ] concat
Q
[ 1.00000 0 0 1.00000 272.000 368.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
37 0 35 18 rc
newpath
46.2812 14.9531 m
45.9166 15.1093 45.5677 15.1875 45.2343 15.1875  c
44.3906 15.1875 43.7734 14.9739 43.3828 14.5468  c
42.9921 14.1197 42.7968 13.4427 42.7968 12.5156  c
42.7968 7.64062 l
41.6250 7.64062 l
41.6250 7.04687 l
42.7968 7.04687 l
42.7968 5.60937 l
44.2500 5.25000 l
44.2500 7.04687 l
46.4687 7.04687 l
46.4687 7.64062 l
44.2500 7.64062 l
44.2500 12.7031 l
44.2500 13.4427 44.3333 13.9427 44.5000 14.2031  c
44.6666 14.4635 44.9843 14.5937 45.4531 14.5937  c
45.6822 14.5937 45.9583 14.5208 46.2812 14.3750  c
46.2812 14.9531 l
h
48.6250 12.3750 m
48.6250 11.6562 l
57.2968 11.6562 l
57.2968 12.3750 l
48.6250 12.3750 l
h
48.6250 9.67187 m
48.6250 8.93750 l
57.2968 8.93750 l
57.2968 9.67187 l
48.6250 9.67187 l
h
64.4218 11.9375 m
59.4531 11.9375 l
59.4531 11.2031 l
64.8750 3.98437 l
65.6875 3.98437 l
65.6875 10.8437 l
67.1406 10.8437 l
67.1406 11.9375 l
65.6875 11.9375 l
65.6875 13.1093 l
65.6875 13.6822 65.7317 14.0520 65.8203 14.2187  c
65.9088 14.3854 66.1041 14.4791 66.4062 14.5000  c
66.9062 14.5312 l
67.0468 14.5468 l
67.0468 15.0000 l
62.8906 15.0000 l
62.8906 14.5468 l
63.0156 14.5312 l
63.7812 14.5000 l
64.0416 14.4895 64.2135 14.3932 64.2968 14.2109  c
64.3802 14.0286 64.4218 13.6614 64.4218 13.1093  c
64.4218 11.9375 l
h
60.2656 10.8437 m
64.4218 10.8437 l
64.4218 5.31250 l
60.2656 10.8437 l
h
f
Q
cliprestore
newpath
0 0 m
0 19.0000 l
73.0000 19.0000 l
73.0000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 272.000 368.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -272.000 -368.000 ] concat
cliprestore
newpath
53.0000 365.000 m
53.0000 390.000 l
347.000 390.000 l
347.000 365.000 l
h
W
Q
Q
2 J
0 j
newpath
54.5000 366.500 m
344.500 366.500 l
344.500 387.500 l
54.5000 387.500 l
54.5000 366.500 l
h
S
0 J
1 j
Q
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 363 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
8.50000 -1.00000 378.492 363.000 rc
1.00000 0 0 RG
newpath
9.50000 227.473 m
384.992 134.526 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
8.50000 -1.00000 378.492 363.000 rc
0.196078 0.803922 0.196078 RG
newpath
9.50000 289.762 m
384.992 72.2371 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
8.50000 -1.00000 378.492 363.000 rc
0.854902 0.647059 0.125490 RG
newpath
9.50000 339.870 m
384.992 22.1292 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
8.50000 -1.00000 378.492 363.000 rc
0 0 1.00000 RG
newpath
9.50000 361.000 m
384.992 1.00000 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
Q
q
q
newpath
9.50000 181.000 m
384.992 181.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
284 204 15 15 rc
newpath
288.031 217.000 m
288.031 216.609 l
288.125 216.593 l
288.354 216.583 288.593 216.437 288.843 216.156  c
289.531 215.375 l
290.984 213.656 l
289.515 211.765 l
288.890 211.000 l
288.640 210.687 288.380 210.520 288.109 210.500  c
287.984 210.500 l
287.984 210.109 l
291.109 210.109 l
291.109 210.500 l
290.984 210.500 l
290.718 210.515 l
290.437 210.515 290.296 210.578 290.296 210.703  c
290.296 210.776 290.531 211.130 291.000 211.765  c
291.984 213.093 l
292.937 211.796 l
293.354 211.213 293.562 210.859 293.562 210.734  c
293.562 210.578 293.447 210.500 293.218 210.500  c
292.984 210.500 l
292.828 210.500 l
292.828 210.109 l
295.031 210.109 l
295.031 210.500 l
294.906 210.500 l
294.625 210.520 294.364 210.687 294.125 211.000  c
293.515 211.765 l
292.234 213.406 l
293.734 215.359 l
294.349 216.161 294.822 216.572 295.156 216.593  c
295.265 216.609 l
295.265 217.000 l
292.125 217.000 l
292.125 216.609 l
292.234 216.609 l
292.531 216.593 l
292.843 216.593 293.000 216.541 293.000 216.437  c
293.000 216.354 292.760 216.000 292.281 215.375  c
291.203 213.984 l
290.140 215.375 l
289.651 216.010 289.406 216.354 289.406 216.406  c
289.406 216.531 289.562 216.593 289.875 216.593  c
290.125 216.609 l
290.265 216.609 l
290.265 217.000 l
288.031 217.000 l
h
f
Q
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
9.50000 181.000 m
9.50000 186.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 195 7 13 rc
newpath
16.7968 202.437 m
8.20312 202.437 l
8.20312 201.765 l
16.7968 201.765 l
16.7968 202.437 l
h
f
Q
newpath
16.1718 205.937 m
16.1718 204.281 l
16.7968 204.281 l
16.8125 204.421 l
16.8281 204.859 l
16.8281 205.130 16.9869 205.362 17.3046 205.554  c
17.6224 205.747 18.0156 205.843 18.4843 205.843  c
19.0364 205.843 19.4817 205.625 19.8203 205.187  c
20.1588 204.750 20.3281 204.171 20.3281 203.453  c
20.3281 202.744 20.1067 202.190 19.6640 201.789  c
19.2213 201.388 18.6041 201.187 17.8125 201.187  c
17.0312 201.187 l
17.0312 200.796 l
17.4531 200.796 l
19.2239 200.796 20.1093 200.083 20.1093 198.656  c
20.1093 197.385 19.5520 196.750 18.4375 196.750  c
17.9479 196.750 17.5208 196.854 17.1562 197.062  c
17.0208 197.145 16.9270 197.484 16.8750 198.078  c
16.8750 198.171 l
16.2500 198.171 l
16.2500 196.734 l
16.9270 196.484 17.6927 196.359 18.5468 196.359  c
19.4114 196.359 20.0963 196.554 20.6015 196.945  c
21.1067 197.335 21.3593 197.864 21.3593 198.531  c
21.3593 199.645 20.7031 200.442 19.3906 200.921  c
20.1927 201.130 20.7682 201.427 21.1171 201.812  c
21.4661 202.197 21.6406 202.734 21.6406 203.421  c
21.6406 204.286 21.3593 204.971 20.7968 205.476  c
20.2343 205.981 19.4687 206.234 18.5000 206.234  c
17.6145 206.234 16.8385 206.135 16.1718 205.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
72.0820 181.000 m
72.0820 186.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
69 195 7 13 rc
newpath
79.7968 202.437 m
71.2031 202.437 l
71.2031 201.765 l
79.7968 201.765 l
79.7968 202.437 l
h
f
Q
newpath
79.0156 206.000 m
79.0156 205.375 l
79.3802 204.322 79.9427 203.437 80.7031 202.718  c
81.3906 202.093 l
82.1614 201.364 82.6770 200.786 82.9375 200.359  c
83.1979 199.932 83.3281 199.442 83.3281 198.890  c
83.3281 198.244 83.1692 197.729 82.8515 197.343  c
82.5338 196.958 82.1145 196.765 81.5937 196.765  c
81.0208 196.765 80.5364 196.921 80.1406 197.234  c
79.9947 197.349 79.9010 197.770 79.8593 198.500  c
79.8593 198.656 l
79.2187 198.656 l
79.2187 196.937 l
80.1354 196.552 80.9791 196.359 81.7500 196.359  c
82.5937 196.359 83.2890 196.599 83.8359 197.078  c
84.3828 197.557 84.6562 198.161 84.6562 198.890  c
84.6562 199.880 84.0416 200.796 82.8125 201.640  c
82.0468 202.171 l
80.8281 203.005 80.1614 203.916 80.0468 204.906  c
84.6093 204.906 l
84.6093 206.000 l
79.0156 206.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
134.664 181.000 m
134.664 186.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
131 195 7 13 rc
newpath
141.796 202.437 m
133.203 202.437 l
133.203 201.765 l
141.796 201.765 l
141.796 202.437 l
h
f
Q
newpath
144.578 196.515 m
144.578 204.359 l
144.625 204.984 l
144.635 205.234 144.705 205.398 144.835 205.476  c
144.966 205.554 145.234 205.593 145.640 205.593  c
146.390 205.609 l
146.390 206.000 l
141.531 206.000 l
141.531 205.609 l
142.265 205.593 l
142.671 205.593 142.940 205.554 143.070 205.476  c
143.200 205.398 143.276 205.234 143.296 204.984  c
143.328 204.359 l
143.328 198.531 l
143.296 197.890 l
143.296 197.588 143.208 197.437 143.031 197.437  c
142.906 197.437 142.614 197.479 142.156 197.562  c
141.531 197.671 l
141.531 197.281 l
144.578 196.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 181.000 m
197.246 186.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
195.906 204.234 m
194.937 204.234 194.156 203.783 193.562 202.882  c
192.968 201.981 192.671 200.796 192.671 199.328  c
192.671 197.817 192.968 196.614 193.562 195.718  c
194.156 194.822 194.953 194.375 195.953 194.375  c
196.953 194.375 197.752 194.822 198.351 195.718  c
198.950 196.614 199.250 197.812 199.250 199.312  c
199.250 200.822 198.950 202.020 198.351 202.906  c
197.752 203.791 196.937 204.234 195.906 204.234  c
h
195.921 203.843 m
197.255 203.906 197.921 202.369 197.921 199.234  c
197.921 196.244 197.265 194.750 195.953 194.750  c
194.651 194.750 194.000 196.265 194.000 199.296  c
194.000 202.265 194.640 203.781 195.921 203.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
259.828 181.000 m
259.828 186.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
264.578 196.515 m
264.578 204.359 l
264.625 204.984 l
264.635 205.234 264.705 205.398 264.835 205.476  c
264.966 205.554 265.234 205.593 265.640 205.593  c
266.390 205.609 l
266.390 206.000 l
261.531 206.000 l
261.531 205.609 l
262.265 205.593 l
262.671 205.593 262.940 205.554 263.070 205.476  c
263.200 205.398 263.276 205.234 263.296 204.984  c
263.328 204.359 l
263.328 198.531 l
263.296 197.890 l
263.296 197.588 263.208 197.437 263.031 197.437  c
262.906 197.437 262.614 197.479 262.156 197.562  c
261.531 197.671 l
261.531 197.281 l
264.578 196.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
322.410 181.000 m
322.410 186.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
324.015 206.000 m
324.015 205.375 l
324.380 204.322 324.942 203.437 325.703 202.718  c
326.390 202.093 l
327.161 201.364 327.677 200.786 327.937 200.359  c
328.197 199.932 328.328 199.442 328.328 198.890  c
328.328 198.244 328.169 197.729 327.851 197.343  c
327.533 196.958 327.114 196.765 326.593 196.765  c
326.020 196.765 325.536 196.921 325.140 197.234  c
324.994 197.349 324.901 197.770 324.859 198.500  c
324.859 198.656 l
324.218 198.656 l
324.218 196.937 l
325.135 196.552 325.979 196.359 326.750 196.359  c
327.593 196.359 328.289 196.599 328.835 197.078  c
329.382 197.557 329.656 198.161 329.656 198.890  c
329.656 199.880 329.041 200.796 327.812 201.640  c
327.046 202.171 l
325.828 203.005 325.161 203.916 325.046 204.906  c
329.609 204.906 l
329.609 206.000 l
324.015 206.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
384.992 181.000 m
384.992 186.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
386.171 205.937 m
386.171 204.281 l
386.796 204.281 l
386.812 204.421 l
386.828 204.859 l
386.828 205.130 386.987 205.362 387.304 205.554  c
387.622 205.747 388.015 205.843 388.484 205.843  c
389.036 205.843 389.481 205.625 389.820 205.187  c
390.158 204.750 390.328 204.171 390.328 203.453  c
390.328 202.744 390.106 202.190 389.664 201.789  c
389.221 201.388 388.604 201.187 387.812 201.187  c
387.031 201.187 l
387.031 200.796 l
387.453 200.796 l
389.224 200.796 390.109 200.083 390.109 198.656  c
390.109 197.385 389.552 196.750 388.437 196.750  c
387.947 196.750 387.520 196.854 387.156 197.062  c
387.020 197.145 386.927 197.484 386.875 198.078  c
386.875 198.171 l
386.250 198.171 l
386.250 196.734 l
386.927 196.484 387.692 196.359 388.546 196.359  c
389.411 196.359 390.096 196.554 390.601 196.945  c
391.106 197.335 391.359 197.864 391.359 198.531  c
391.359 199.645 390.703 200.442 389.390 200.921  c
390.192 201.130 390.768 201.427 391.117 201.812  c
391.466 202.197 391.640 202.734 391.640 203.421  c
391.640 204.286 391.359 204.971 390.796 205.476  c
390.234 205.981 389.468 206.234 388.500 206.234  c
387.614 206.234 386.838 206.135 386.171 205.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
40.7910 181.000 m
40.7910 183.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
103.373 181.000 m
103.373 183.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
165.955 181.000 m
165.955 183.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
228.537 181.000 m
228.537 183.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
291.119 181.000 m
291.119 183.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
353.701 181.000 m
353.701 183.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
197.246 361.000 m
197.246 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
141 84 16 15 rc
newpath
150.562 97.0000 m
150.562 95.7031 l
149.927 96.6718 149.099 97.1562 148.078 97.1562  c
147.484 97.1562 147.018 96.9609 146.679 96.5703  c
146.341 96.1796 146.171 95.6458 146.171 94.9687  c
146.171 91.7500 l
146.140 91.1250 l
146.119 90.8854 146.078 90.7317 146.015 90.6640  c
145.953 90.5963 145.796 90.5520 145.546 90.5312  c
145.125 90.5000 l
145.000 90.5000 l
145.000 90.1093 l
147.421 90.1093 l
147.421 94.7656 l
147.421 95.8281 147.802 96.3593 148.562 96.3593  c
149.250 96.3593 149.916 96.0000 150.562 95.2812  c
150.562 91.7500 l
150.515 91.1250 l
150.505 90.8854 150.466 90.7317 150.398 90.6640  c
150.330 90.5963 150.177 90.5520 149.937 90.5312  c
149.500 90.5000 l
149.390 90.5000 l
149.390 90.1093 l
151.812 90.1093 l
151.812 95.3593 l
151.859 95.9843 l
151.869 96.2239 151.908 96.3776 151.976 96.4453  c
152.044 96.5130 152.197 96.5520 152.437 96.5625  c
152.875 96.5937 l
152.984 96.6093 l
152.984 97.0000 l
150.562 97.0000 l
h
f
Q
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
197.246 340.189 m
192.046 340.189 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
168 340 7 13 rc
newpath
178.796 347.437 m
170.203 347.437 l
170.203 346.765 l
178.796 346.765 l
178.796 347.437 l
h
f
Q
newpath
181.578 341.515 m
181.578 349.359 l
181.625 349.984 l
181.635 350.234 181.705 350.398 181.835 350.476  c
181.966 350.554 182.234 350.593 182.640 350.593  c
183.390 350.609 l
183.390 351.000 l
178.531 351.000 l
178.531 350.609 l
179.265 350.593 l
179.671 350.593 179.940 350.554 180.070 350.476  c
180.200 350.398 180.276 350.234 180.296 349.984  c
180.328 349.359 l
180.328 343.531 l
180.296 342.890 l
180.296 342.588 180.208 342.437 180.031 342.437  c
179.906 342.437 179.614 342.479 179.156 342.562  c
178.531 342.671 l
178.531 342.281 l
181.578 341.515 l
h
186.484 351.015 m
186.484 349.437 l
187.109 349.437 l
187.125 349.578 l
187.140 350.062 l
187.161 350.583 187.567 350.843 188.359 350.843  c
188.942 350.843 189.406 350.614 189.750 350.156  c
190.093 349.697 190.265 349.078 190.265 348.296  c
190.265 347.401 190.000 346.760 189.468 346.375  c
188.937 345.989 188.067 345.796 186.859 345.796  c
186.640 345.796 l
186.640 341.609 l
191.375 341.609 l
191.375 342.703 l
187.031 342.703 l
187.031 345.328 l
187.609 345.328 l
190.255 345.328 191.578 346.333 191.578 348.343  c
191.578 349.250 191.273 349.958 190.664 350.468  c
190.054 350.979 189.213 351.234 188.140 351.234  c
187.609 351.234 187.057 351.161 186.484 351.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 287.126 m
192.046 287.126 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
168 287 7 13 rc
newpath
178.796 294.437 m
170.203 294.437 l
170.203 293.765 l
178.796 293.765 l
178.796 294.437 l
h
f
Q
newpath
181.578 288.515 m
181.578 296.359 l
181.625 296.984 l
181.635 297.234 181.705 297.398 181.835 297.476  c
181.966 297.554 182.234 297.593 182.640 297.593  c
183.390 297.609 l
183.390 298.000 l
178.531 298.000 l
178.531 297.609 l
179.265 297.593 l
179.671 297.593 179.940 297.554 180.070 297.476  c
180.200 297.398 180.276 297.234 180.296 296.984  c
180.328 296.359 l
180.328 290.531 l
180.296 289.890 l
180.296 289.588 180.208 289.437 180.031 289.437  c
179.906 289.437 179.614 289.479 179.156 289.562  c
178.531 289.671 l
178.531 289.281 l
181.578 288.515 l
h
188.906 298.234 m
187.937 298.234 187.156 297.783 186.562 296.882  c
185.968 295.981 185.671 294.796 185.671 293.328  c
185.671 291.817 185.968 290.614 186.562 289.718  c
187.156 288.822 187.953 288.375 188.953 288.375  c
189.953 288.375 190.752 288.822 191.351 289.718  c
191.950 290.614 192.250 291.812 192.250 293.312  c
192.250 294.822 191.950 296.020 191.351 296.906  c
190.752 297.791 189.937 298.234 188.906 298.234  c
h
188.921 297.843 m
190.255 297.906 190.921 296.369 190.921 293.234  c
190.921 290.244 190.265 288.750 188.953 288.750  c
187.651 288.750 187.000 290.265 187.000 293.296  c
187.000 296.265 187.640 297.781 188.921 297.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 234.063 m
192.046 234.063 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
176 234 7 13 rc
newpath
186.796 241.437 m
178.203 241.437 l
178.203 240.765 l
186.796 240.765 l
186.796 241.437 l
h
f
Q
newpath
186.484 245.015 m
186.484 243.437 l
187.109 243.437 l
187.125 243.578 l
187.140 244.062 l
187.161 244.583 187.567 244.843 188.359 244.843  c
188.942 244.843 189.406 244.614 189.750 244.156  c
190.093 243.697 190.265 243.078 190.265 242.296  c
190.265 241.401 190.000 240.760 189.468 240.375  c
188.937 239.989 188.067 239.796 186.859 239.796  c
186.640 239.796 l
186.640 235.609 l
191.375 235.609 l
191.375 236.703 l
187.031 236.703 l
187.031 239.328 l
187.609 239.328 l
190.255 239.328 191.578 240.333 191.578 242.343  c
191.578 243.250 191.273 243.958 190.664 244.468  c
190.054 244.979 189.213 245.234 188.140 245.234  c
187.609 245.234 187.057 245.161 186.484 245.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 181.000 m
192.046 181.000 l
S
Q
q
newpath
197.246 127.936 m
192.046 127.936 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
186.484 138.015 m
186.484 136.437 l
187.109 136.437 l
187.125 136.578 l
187.140 137.062 l
187.161 137.583 187.567 137.843 188.359 137.843  c
188.942 137.843 189.406 137.614 189.750 137.156  c
190.093 136.697 190.265 136.078 190.265 135.296  c
190.265 134.401 190.000 133.760 189.468 133.375  c
188.937 132.989 188.067 132.796 186.859 132.796  c
186.640 132.796 l
186.640 128.609 l
191.375 128.609 l
191.375 129.703 l
187.031 129.703 l
187.031 132.328 l
187.609 132.328 l
190.255 132.328 191.578 133.333 191.578 135.343  c
191.578 136.250 191.273 136.958 190.664 137.468  c
190.054 137.979 189.213 138.234 188.140 138.234  c
187.609 138.234 187.057 138.161 186.484 138.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 74.8737 m
192.046 74.8737 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
181.578 75.5156 m
181.578 83.3593 l
181.625 83.9843 l
181.635 84.2343 181.705 84.3984 181.835 84.4765  c
181.966 84.5546 182.234 84.5937 182.640 84.5937  c
183.390 84.6093 l
183.390 85.0000 l
178.531 85.0000 l
178.531 84.6093 l
179.265 84.5937 l
179.671 84.5937 179.940 84.5546 180.070 84.4765  c
180.200 84.3984 180.276 84.2343 180.296 83.9843  c
180.328 83.3593 l
180.328 77.5312 l
180.296 76.8906 l
180.296 76.5885 180.208 76.4375 180.031 76.4375  c
179.906 76.4375 179.614 76.4791 179.156 76.5625  c
178.531 76.6718 l
178.531 76.2812 l
181.578 75.5156 l
h
188.906 85.2343 m
187.937 85.2343 187.156 84.7838 186.562 83.8828  c
185.968 82.9817 185.671 81.7968 185.671 80.3281  c
185.671 78.8177 185.968 77.6145 186.562 76.7187  c
187.156 75.8229 187.953 75.3750 188.953 75.3750  c
189.953 75.3750 190.752 75.8229 191.351 76.7187  c
191.950 77.6145 192.250 78.8125 192.250 80.3125  c
192.250 81.8229 191.950 83.0208 191.351 83.9062  c
190.752 84.7916 189.937 85.2343 188.906 85.2343  c
h
188.921 84.8437 m
190.255 84.9062 190.921 83.3697 190.921 80.2343  c
190.921 77.2447 190.265 75.7500 188.953 75.7500  c
187.651 75.7500 187.000 77.2656 187.000 80.2968  c
187.000 83.2656 187.640 84.7812 188.921 84.8437  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 21.8106 m
192.046 21.8106 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
181.578 22.5156 m
181.578 30.3593 l
181.625 30.9843 l
181.635 31.2343 181.705 31.3984 181.835 31.4765  c
181.966 31.5546 182.234 31.5937 182.640 31.5937  c
183.390 31.6093 l
183.390 32.0000 l
178.531 32.0000 l
178.531 31.6093 l
179.265 31.5937 l
179.671 31.5937 179.940 31.5546 180.070 31.4765  c
180.200 31.3984 180.276 31.2343 180.296 30.9843  c
180.328 30.3593 l
180.328 24.5312 l
180.296 23.8906 l
180.296 23.5885 180.208 23.4375 180.031 23.4375  c
179.906 23.4375 179.614 23.4791 179.156 23.5625  c
178.531 23.6718 l
178.531 23.2812 l
181.578 22.5156 l
h
186.484 32.0156 m
186.484 30.4375 l
187.109 30.4375 l
187.125 30.5781 l
187.140 31.0625 l
187.161 31.5833 187.567 31.8437 188.359 31.8437  c
188.942 31.8437 189.406 31.6145 189.750 31.1562  c
190.093 30.6979 190.265 30.0781 190.265 29.2968  c
190.265 28.4010 190.000 27.7604 189.468 27.3750  c
188.937 26.9895 188.067 26.7968 186.859 26.7968  c
186.640 26.7968 l
186.640 22.6093 l
191.375 22.6093 l
191.375 23.7031 l
187.031 23.7031 l
187.031 26.3281 l
187.609 26.3281 l
190.255 26.3281 191.578 27.3333 191.578 29.3437  c
191.578 30.2500 191.273 30.9583 190.664 31.4687  c
190.054 31.9791 189.213 32.2343 188.140 32.2343  c
187.609 32.2343 187.057 32.1614 186.484 32.0156  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 350.802 m
194.646 350.802 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 329.576 m
194.646 329.576 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 318.964 m
194.646 318.964 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 308.351 m
194.646 308.351 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 297.738 m
194.646 297.738 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 276.513 m
194.646 276.513 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 265.901 m
194.646 265.901 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 255.288 m
194.646 255.288 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 244.675 m
194.646 244.675 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 223.450 m
194.646 223.450 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 212.837 m
194.646 212.837 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 202.225 m
194.646 202.225 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 191.612 m
194.646 191.612 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 170.387 m
194.646 170.387 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 159.774 m
194.646 159.774 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 149.162 m
194.646 149.162 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 138.549 m
194.646 138.549 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 117.324 m
194.646 117.324 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 106.711 m
194.646 106.711 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 96.0990 m
194.646 96.0990 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 85.4863 m
194.646 85.4863 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 64.2611 m
194.646 64.2611 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 53.6485 m
194.646 53.6485 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 43.0358 m
194.646 43.0358 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 32.4232 m
194.646 32.4232 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.246 11.1980 m
194.646 11.1980 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
